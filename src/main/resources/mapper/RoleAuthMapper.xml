<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nynu.goule.mapper.RoleAuthMapper">

    <select id="queryAuthId" resultType="java.util.Map" parameterType="String">
        select authId from role_auth where roleId in(select roleId from user_role where userId = #{userId})
    </select>

    <select id="getAllRoles" resultType="java.util.Map">
        select id, roleId, roleName, superRoleId, description from roles
    </select>

    <select id="getExistRoleList" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
            r.roleName,
            r.roleId,
            r.description
        FROM
            users u,
            user_role s,
            roles r
        WHERE
            u.username = #{username}
        AND u.id = s.userId
        AND s.roleId = r.roleId
    </select>

    <select id="getAssignableRoleList" resultType="java.util.Map">
        SELECT roleName,roleId,description from roles
    </select>

    <select id="getOldRoleList" resultType="String" parameterType="java.util.Map">
        SELECT
            r.roleId
        FROM
            users u,
            user_role s,
            roles r
        WHERE
            u.username = #{username}
        AND u.id = s.userId
        AND s.roleId = r.roleId
    </select>

    <insert id="addAcctRoles" parameterType="java.util.Map">
            insert into user_role (userId, roleId) values ( #{userId}, #{roleId} )
    </insert>

    <delete id="delAcctRoles" parameterType="java.util.Map">
            delete from user_role where userId = #{userId} and roleId = #{roleId}
    </delete>

    <select id="findRoleNameById" parameterType="java.util.Map" resultType="String">
        select roleName from roles where roleId in
        <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="getAllAuth" resultType="map">
        select id, authId, authName, description,
        (CASE WHEN useful = '0' THEN '有效'
        WHEN useful = '1' THEN '无效'
        END
            ) AS useful,
        DATE_FORMAT(addTime,'%Y-%m-%d %H:%i:%s') addTime from authelement
    </select>

    <update id="updAuthState" parameterType="map">
        update authelement set useful = #{useful} where id = #{id}
    </update>

    <select id="getExistAuthList" parameterType="map" resultType="map">
        SELECT
            a.authName,
            a.authId,
            a.description
        FROM
            roles r,
            role_auth s,
            authelement a
        WHERE
            r.roleId = #{roleId}
        AND a.authId = s.authId
        AND s.roleId = r.roleId
    </select>

    <select id="getAssignableAuthList" resultType="map">
        select authName, authId, description from authelement
    </select>

    <select id="getAuthsByRoleId" parameterType="map" resultType="java.lang.String">
        select
            a.authId
        FROM
            roles r,
            role_auth s,
            authelement a
        WHERE
            r.roleId = #{roleId}
        AND a.authId = s.authId
        AND s.roleId = r.roleId
    </select>

    <insert id="addRoleAuths" parameterType="map">
        <foreach collection="diffList" item="item" separator=";">
            insert into
                role_auth
                (roleId, authId)
            VALUES
                (#{roleId},#{item})
        </foreach>
    </insert>

    <select id="getAuthUseful" parameterType="string" resultType="int">
        select count(*) from authelement where useful = '1' and authId in (select authId from role_auth where roleId = #{param})
    </select>

    <delete id="delRoleAuths" parameterType="map">
        <foreach collection="diffList" item="item" separator=";">
            delete from role_auth where roleId = #{roleId} and authId = #{item}
        </foreach>
    </delete>
</mapper>
