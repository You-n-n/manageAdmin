<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nynu.goule.mapper.LoginUserMapper">

    <select id="login" parameterType="java.util.Map" resultType="java.util.Map">
        select s.id,username, password,
        (CASE WHEN acctStatus = '1' THEN '正常'
            WHEN acctStatus = '2' THEN '锁定'
            END ) AS acctStatus,
        lockReason,
        (CASE WHEN humanStatus = '1' THEN '在职'
            WHEN humanStatus = '2' THEN '离职'
            END ) AS humanStatus,
        (CASE WHEN sex = '1' THEN '男'
            WHEN sex = '2' THEN '女'
            END ) AS sex,
            account_name accountName,telphone,mail,prsnIdNum,birthDay,DATE_FORMAT(addTime,'%Y-%m-%d %H:%i:%s') addTime, o.orgaName orgaName
        from
            users s, orgainfo o
        where
            s.orgaId = o.orgaId and username=#{username}
    </select>

    <insert id="addUser" parameterType="java.util.Map">
        insert into users (
        username,
        password,
        account_name,
        telphone,
        sex,
        orgaId,
        <if test="mail != null and mail != ''">
            mail,
        </if>
        <if test="prsnIdNum != null and prsnIdNum != ''">
            prsnIdNum,
        </if>
        <if test="birthDay != null and birthDay != ''">
            birthDay,
        </if>
        addTime
        )
        VALUES (
        #{username},
        #{password},
        #{accountName},
        #{telPhone},
        #{sex},
        #{orgaId},
        <if test="mail != null and mail != ''">
            #{mail},
        </if>
        <if test="prsnIdNum != null and prsnIdNum != ''">
            #{prsnIdNum},
        </if>
        <if test="birthDay != null and birthDay != ''">
            #{birthDay},
        </if>
        #{addTime}
        )
    </insert>

    <select id="queryUsernameCount" parameterType="java.lang.String" resultType="java.util.Map">
        select username from users where
        username like concat('%',#{username},'%')
    </select>

    <select id="getAllUserInfo" resultType="java.util.Map">
        select s.id,username,
        (CASE WHEN acctStatus = '1' THEN '正常'
            WHEN acctStatus = '2' THEN '锁定'
            END ) AS acctStatus,
        lockReason,
        (CASE WHEN humanStatus = '1' THEN '在职'
            WHEN humanStatus = '2' THEN '离职'
            END ) AS humanStatus,
        (CASE WHEN sex = '1' THEN '男'
            WHEN sex = '2' THEN '女'
            END ) AS sex,
            account_name accountName,telphone,mail,prsnIdNum,birthDay,DATE_FORMAT(addTime,'%Y-%m-%d %H:%i:%s') addTime, o.orgaName orgaName from users s, orgainfo o where s.orgaId = o.orgaId ORDER BY addTime desc
    </select>

    <select id="queryPhoneNum" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from users where telphone = #{telPhone}
    </select>

    <select id="getUserIdByUserName" resultType="com.nynu.goule.pojo.LoginUser" parameterType="String">
        select id from users where username = #{mainAcctId}
    </select>

    <select id="getOldPwd" resultType="com.nynu.goule.pojo.LoginUser" parameterType="java.util.Map">
        select * from users where username = #{username}
    </select>

    <update id="updatePwd" parameterType="java.util.Map">
        update users set password = #{newPwd} where username = #{username}
    </update>

    <delete id="delUser" parameterType="java.util.Map" >
        delete from users where id in
        <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <select id="checkLock" resultType="int" parameterType="string">
        select count(*) from users where username=#{username} and acctStatus = '2'
    </select>

    <update id="lockUser" parameterType="map">
        update users set lockReason = #{lockReason}, acctStatus = '2' where
        <foreach collection="ids" index="index" item="item" open="(" close=")" separator="or">
            id = #{item}
        </foreach>
    </update>

    <update id="breakLock" parameterType="map">
        update users set acctStatus = '1', lockReason = '' where
        <foreach collection="ids" index="index" item="item" open="(" close=")" separator="or">
            id = #{item}
        </foreach>
    </update>

    <update id="resetPwd" parameterType="map">
        <foreach collection="list" index="index" item="item" separator=";">
            update users set password = #{item.password} where id = #{item.id}
        </foreach>
    </update>

    <select id="queryUserInfoById" parameterType="map" resultType="map">
        select id, username, telphone from users where
        <foreach collection="ids" index="index" item="item" open="(" close=")" separator="or">
            id = #{item}
        </foreach>
    </select>

    <select id="getOrgaInfo" parameterType="map" resultType="map">
        select * from orgainfo
    </select>

    <select id="getOrgaIdByOrgaName" parameterType="string" resultType="string">
        select orgaId from orgainfo where orgaName = #{orgaName}
    </select>
</mapper>
